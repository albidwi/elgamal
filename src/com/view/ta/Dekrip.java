/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view.ta;


import com.controller.ta.dekripdatabase;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import static sun.io.Win32ErrorMode.initialize;
/**
 *
 * @author albi
 */
public class Dekrip extends javax.swing.JFrame {

    /**
     * Creates new form Dekrip
     */
    public Dekrip() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblChooseFile = new javax.swing.JLabel();
        lblOutputFile = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        txtDatabase = new javax.swing.JTextField();
        txtTable = new javax.swing.JTextField();
        txtTime = new javax.swing.JTextField();
        lblSecond = new javax.swing.JLabel();
        btnDekrip = new javax.swing.JButton();
        ProgBar = new javax.swing.JProgressBar();
        txtKunci = new javax.swing.JTextField();
        lblPrivateKey = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        btnPilih = new javax.swing.JButton();
        txtsize = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblChooseFile.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblChooseFile.setText("NAMA DATABASE");

        lblOutputFile.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblOutputFile.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblOutputFile.setText("NAMA TABEL");

        lblTime.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblTime.setText("TIME");

        txtDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDatabaseActionPerformed(evt);
            }
        });

        lblSecond.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblSecond.setText("SECOND");

        btnDekrip.setBackground(new java.awt.Color(0, 153, 51));
        btnDekrip.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnDekrip.setForeground(new java.awt.Color(255, 255, 255));
        btnDekrip.setText("DECRYPT");
        btnDekrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDekripActionPerformed(evt);
            }
        });

        txtKunci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKunciActionPerformed(evt);
            }
        });

        lblPrivateKey.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblPrivateKey.setForeground(new java.awt.Color(0, 0, 51));
        lblPrivateKey.setText("PRIVATE KEY");

        btnClear.setBackground(new java.awt.Color(255, 255, 255));
        btnClear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnPilih.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btnPilih.setText("SELECT");
        btnPilih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPilihActionPerformed(evt);
            }
        });

        txtsize.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("BYTE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSecond)
                                .addGap(18, 18, 18)
                                .addComponent(txtsize, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDekrip, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ProgBar, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblChooseFile)
                            .addComponent(lblOutputFile)
                            .addComponent(lblPrivateKey))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtKunci, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPilih))
                            .addComponent(txtTable, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(197, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChooseFile)
                    .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOutputFile)
                    .addComponent(txtTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKunci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPilih)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(lblPrivateKey)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTime)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSecond)
                        .addComponent(txtsize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addComponent(ProgBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 252, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDekrip, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDatabaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDatabaseActionPerformed

    private void btnDekripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDekripActionPerformed

        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                if (txtDatabase.getText().equals("") || txtTable.getText().equals("")
                    || txtKunci.getText().equals("") )
                {
                    JOptionPane.showMessageDialog(null, "Masukkan data dengan benar !","Warning", JOptionPane.ERROR_MESSAGE);
                    clear();
                    return;
                }
                else {

                    ProgBar.setIndeterminate(true);

                    //To change body of generated methods, choose Tools | Templates.

                    String database = (txtDatabase.getText());
                    String table = (txtTable.getText());
                    String Kunci = (txtKunci.getText());
                    String timeExecute;
                    long end;
                    long start;

                    dekripdatabase dekrip = new dekripdatabase();

                    try {
                        start = System.currentTimeMillis();
                        dekrip.setPrivateKey(Kunci);
                        String balik = dekrip.dekrip_database(database, table);
                        end = System.currentTimeMillis();
                        timeExecute = String.valueOf((end - start) / 1000.0);
                        txtTime.setText(timeExecute);
                        ProgBar.setIndeterminate(false);
                        long ukuran = table.length();
                        String Ukuran = Long.toString(ukuran);
                        txtsize.setText(Ukuran);

                        JOptionPane.showMessageDialog(null, balik, "Output", JOptionPane.INFORMATION_MESSAGE);
                        //System.out.println("jumlah byte :" +ukuran);

                    } catch (SQLException ex) {
                        Logger.getLogger(Dekrip.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null, "Decrypt Gagal! \n", "Warning", JOptionPane.ERROR_MESSAGE);
                        clear();
                    }

                }
            }
        });
        t.start();

        // TODO add your handling code here:
    }//GEN-LAST:event_btnDekripActionPerformed

    private void txtKunciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKunciActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKunciActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed

        clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnPilihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPilihActionPerformed
        // TODO add your handling code here:JFileChooser dataFile = new JFileChooser("D:\\");
            JFileChooser dataFile = new JFileChooser("D:\\");

                FileNameExtensionFilter filter = new FileNameExtensionFilter("private key", "PrivateKey");
                dataFile.setFileFilter(filter);
                dataFile.setAcceptAllFileFilterUsed(false);
                int returnVal = dataFile.showOpenDialog(null);
                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    File file = dataFile.getSelectedFile();
                    String dir = file.getAbsolutePath();

                    txtKunci.setText(dir);
                }
    }//GEN-LAST:event_btnPilihActionPerformed
  public void clear() {
        ProgBar.setIndeterminate(false);
        txtDatabase.setText("");
        txtTable.setText("");

        txtKunci.setText("");
        txtTime.setText("");
        txtsize.setText("");
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dekrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dekrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dekrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dekrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dekrip().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar ProgBar;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDekrip;
    private javax.swing.JButton btnPilih;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblChooseFile;
    private javax.swing.JLabel lblOutputFile;
    private javax.swing.JLabel lblPrivateKey;
    private javax.swing.JLabel lblSecond;
    private javax.swing.JLabel lblTime;
    private javax.swing.JTextField txtDatabase;
    private javax.swing.JTextField txtKunci;
    private javax.swing.JTextField txtTable;
    private javax.swing.JTextField txtTime;
    private javax.swing.JTextField txtsize;
    // End of variables declaration//GEN-END:variables
}
